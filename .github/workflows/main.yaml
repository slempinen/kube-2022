name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-a
  FRONTEND_IMAGE: frontend
  BACKEND_IMAGE: backend

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./project/v1.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install sops
        uses: mdgreenwald/mozilla-sops-action@v1.2.0
        id: install

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
          
      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Build the Docker image
      - name: Build frontend
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            ./project
      - name: Build backend
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            ./backend
      # Push the Docker image to Google Container Registry
      - name: Publish frontend
        run: |-
          docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
      - name: Publish backend
        run: |-
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
      
      - name: Decrypt secret.yml
        run: |-
          sops --decrypt ./manifests/secret.enc.yml > ./manifests/secret.yml

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl config set-context --current --namespace=project-namespace
          kustomize edit set image $FRONTEND_IMAGE=gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image $BACKEND_IMAGE=gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize build .
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment project-deployment
          kubectl rollout status deployment todos-deployment
          kubectl get services -o wide
